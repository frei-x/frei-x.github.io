<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>衣沾不足惜</title>
  <icon>https://www.gravatar.com/avatar/fc09f0789c91661686a2d27001c968b3</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/javascripth/"/>
  <updated>2019-04-28T09:44:15.047Z</updated>
  <id>https://github.com/javascripth/</id>
  
  <author>
    <name>衣沾不足惜</name>
    <email>javascript.h@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Array的属性和方法 - js标准库之旅(一)</title>
    <link href="https://github.com/javascripth/2019/04/27/Array%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%20-js%E6%A0%87%E5%87%86%E5%BA%93%E4%B9%8B%E6%97%85(%E4%B8%80)/"/>
    <id>https://github.com/javascripth/2019/04/27/Array的属性和方法 -js标准库之旅(一)/</id>
    <published>2019-04-27T12:49:42.000Z</published>
    <updated>2019-04-28T09:44:15.047Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;一门编程语言 ~= 语法 + 标准库 + 开发范式。<br>&emsp;&emsp;一个程序 ~= 数据结构 + 算法。</p><p>&emsp;&emsp;标准库，在js中即为标准的内置对象，这些对象或对象的原型上内置了很多方法和属性，这些写好了的东西，我们也常常称之为“api”。  </p><p>&emsp;&emsp;如果掌握标准库中的api，并能灵活运用，就像 <code>“熟读唐诗三百首，不会做诗也会吟”</code> 。可以不再自己手动实现、依赖第三方插件，能为开发节省大量的时间。<br><a id="more"></a></p><h2 id="转换为数组：-Array-from"><a href="#转换为数组：-Array-from" class="headerlink" title="转换为数组： Array.from"></a>转换为数组： Array.from</h2><p><code>Array.from</code>将伪数组或可迭代对象转换为一个新的数组</p><ul><li>第一个参数是待转换的伪数组或可迭代对象,第二个参数是一个函数，相当于内置的map函数,第三参数是map函数中this指向。</li><li>伪数组：<code>Nodelist</code> 、<code>arguments</code></li><li>可迭代对象：可以理解为任何可以被循环的对象，例如数组、Set，Map，字符串也可以被迭代。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arrNodeList = <span class="built_in">Array</span>.from(<span class="built_in">document</span>.querySelectorAll(<span class="string">'div'</span>));</span><br><span class="line"><span class="built_in">console</span>.log(arrNodeList);<span class="comment">// dom对象组成的数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arrStr =  <span class="built_in">Array</span>.from(<span class="string">'我是字符串啊'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(arrStr);</span><br><span class="line"><span class="comment">//["我", "是", "字", "符", "串", "啊"]</span></span><br></pre></td></tr></table></figure><p>eg：在函数中,将所有传入的参数进行平方计算,且过滤掉非Number类型数据,返回计算后的值组成的数组。第二个参数用于迭代的map函数需要 <code>return</code>。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arrAllArg = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>,<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">isNaN</span>(item))&#123;</span><br><span class="line">            <span class="keyword">return</span> item**<span class="number">2</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">     <span class="built_in">console</span>.log(arrAllArg);</span><br><span class="line">    <span class="comment">// arguments不能使用数组方法。转换后arrArg是数组了</span></span><br><span class="line">   <span class="keyword">let</span> arrArg =  arrAllArg.filter(<span class="function"><span class="params">item</span> =&gt;</span> <span class="built_in">Boolean</span>(item)==<span class="literal">true</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(arrArg);</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="string">'a'</span>)</span><br><span class="line"><span class="comment">//[1, 4, 9, 36,"a"]</span></span><br><span class="line"><span class="comment">//[1, 4, 9, 36]</span></span><br></pre></td></tr></table></figure></p><h2 id="过滤数组：filter"><a href="#过滤数组：filter" class="headerlink" title="过滤数组：filter"></a>过滤数组：filter</h2><p>过滤掉数组中不满足条件的元素，返回剩下的元素组成的新数组。不会改变原数组。</p><ul><li>参数是回调函数,返回false则过滤掉该元素</li><li>第二个参数为回调函数中this的指向</li><li>回调函数三个参数分别表示 当前迭代的元素、索引值、调用filter的原数组。</li></ul><p>eg：返回位于Asia，且area大于一百万平方千米的国家的数据<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arrData = [&#123;</span><br><span class="line">    <span class="string">"continent"</span>: <span class="string">"Asia"</span>,</span><br><span class="line">    <span class="string">"area"</span>: <span class="number">9634057</span>,</span><br><span class="line">    <span class="string">"cname"</span>: <span class="string">"中国"</span>,</span><br><span class="line">    <span class="string">"phoneCode"</span>: <span class="string">"86"</span>,  </span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="string">"continent"</span>: <span class="string">"Asia"</span>,</span><br><span class="line">    <span class="string">"area"</span>: <span class="number">647500</span>,</span><br><span class="line">    <span class="string">"cname"</span>: <span class="string">"阿富汗"</span>,</span><br><span class="line">    <span class="string">"phoneCode"</span>: <span class="string">"93"</span>,</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="string">"continent"</span>: <span class="string">"North America"</span>,</span><br><span class="line">    <span class="string">"area"</span>: <span class="string">"9379091"</span>,</span><br><span class="line">    <span class="string">"cname"</span>: <span class="string">"美国"</span>,</span><br><span class="line">    <span class="string">"phoneCode"</span>: <span class="string">"1"</span>, </span><br><span class="line">&#125;];</span><br><span class="line"><span class="keyword">let</span> arrCountryData = arrData.filter(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item[<span class="string">'continent'</span>]==<span class="string">'Asia'</span> &amp;&amp; item[<span class="string">'area'</span>]&gt;<span class="number">1000000</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(arrCountryData);</span><br><span class="line"><span class="comment">//[&#123;"continent": "Asia","area": 9634057,  "cname": "中国", "phoneCode": "86"&#125;]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="数组中是否存在某元素-includes"><a href="#数组中是否存在某元素-includes" class="headerlink" title="数组中是否存在某元素 includes"></a>数组中是否存在某元素 includes</h2><h2 id="扁平化嵌套的数组-flat"><a href="#扁平化嵌套的数组-flat" class="headerlink" title="扁平化嵌套的数组 flat"></a>扁平化嵌套的数组 flat</h2><table><thead><tr><th style="text-align:center">一个普通标题</th><th style="text-align:center">一个普通标题</th><th style="text-align:center">一个普通标题</th></tr></thead><tbody><tr><td style="text-align:center">短文本</td><td style="text-align:center">中等文本</td><td style="text-align:center">稍微长一点的文本</td></tr><tr><td style="text-align:center">稍微长一点的文本</td><td style="text-align:center">短文本</td><td style="text-align:center">中等文本</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;一门编程语言 ~= 语法 + 标准库 + 开发范式。&lt;br&gt;&amp;emsp;&amp;emsp;一个程序 ~= 数据结构 + 算法。&lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;标准库，在js中即为标准的内置对象，这些对象或对象的原型上内置了很多方法和属性，这些写好了的东西，我们也常常称之为“api”。  &lt;/p&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;如果掌握标准库中的api，并能灵活运用，就像 &lt;code&gt;“熟读唐诗三百首，不会做诗也会吟”&lt;/code&gt; 。可以不再自己手动实现、依赖第三方插件，能为开发节省大量的时间。&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="https://github.com/javascripth/categories/JavaScript/"/>
    
    
      <category term="技巧" scheme="https://github.com/javascripth/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="手册" scheme="https://github.com/javascripth/tags/%E6%89%8B%E5%86%8C/"/>
    
      <category term="数组" scheme="https://github.com/javascripth/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="标准库" scheme="https://github.com/javascripth/tags/%E6%A0%87%E5%87%86%E5%BA%93/"/>
    
      <category term="JS" scheme="https://github.com/javascripth/tags/JS/"/>
    
  </entry>
  
  <entry>
    <title>two</title>
    <link href="https://github.com/javascripth/2019/04/25/two/"/>
    <id>https://github.com/javascripth/2019/04/25/two/</id>
    <published>2019-04-25T10:14:58.000Z</published>
    <updated>2019-04-26T01:13:26.268Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="golang" scheme="https://github.com/javascripth/categories/golang/"/>
    
    
      <category term="测试" scheme="https://github.com/javascripth/tags/%E6%B5%8B%E8%AF%95/"/>
    
      <category term="22" scheme="https://github.com/javascripth/tags/22/"/>
    
  </entry>
  
  <entry>
    <title>first</title>
    <link href="https://github.com/javascripth/2019/04/25/first/"/>
    <id>https://github.com/javascripth/2019/04/25/first/</id>
    <published>2019-04-25T01:22:20.000Z</published>
    <updated>2019-04-26T01:25:05.933Z</updated>
    
    <content type="html"><![CDATA[<h3 id="你好-第一篇文章"><a href="#你好-第一篇文章" class="headerlink" title="你好  第一篇文章"></a>你好  第一篇文章</h3><blockquote><p>引用</p></blockquote><h3 id="一个"><a href="#一个" class="headerlink" title="一个"></a>一个</h3><h3 id="五个"><a href="#五个" class="headerlink" title="五个"></a>五个</h3><h3 id="五个-1"><a href="#五个-1" class="headerlink" title="五个"></a>五个</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;我是div&lt;/div&gt;  </span><br><span class="line">&lt;script&gt;我是js&lt;/script&gt;</span><br><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p><code>单行代码</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;你好-第一篇文章&quot;&gt;&lt;a href=&quot;#你好-第一篇文章&quot; class=&quot;headerlink&quot; title=&quot;你好  第一篇文章&quot;&gt;&lt;/a&gt;你好  第一篇文章&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一个
      
    
    </summary>
    
      <category term="web前端" scheme="https://github.com/javascripth/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js" scheme="https://github.com/javascripth/tags/js/"/>
    
      <category term="原理" scheme="https://github.com/javascripth/tags/%E5%8E%9F%E7%90%86/"/>
    
      <category term="前端教程" scheme="https://github.com/javascripth/tags/%E5%89%8D%E7%AB%AF%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>����</title>
    <link href="https://github.com/javascripth/2019/04/23/%E5%88%9D%E8%A1%B7/"/>
    <id>https://github.com/javascripth/2019/04/23/初衷/</id>
    <published>2019-04-23T05:27:55.933Z</published>
    <updated>2019-04-28T05:17:18.678Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
